{"version":3,"sources":["app/components/TopBar.tsx","app/components/SectionContainer.tsx","app/components/CalculationForm/components/Field.tsx","app/components/CalculationForm/index.tsx","hooks/financialFreedomCalculation.ts","app/components/Returns/components/ReturnCard.tsx","app/components/Returns/index.tsx","app/index.tsx","serviceWorker.ts","components/Material/MaterialProvider.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","title","flexGrow","TopBar","classes","AppBar","position","Toolbar","Typography","variant","className","root","padding","spacing","SectionContainer","children","Container","Field","value","setValue","adornment","adornmentPosition","Grid","item","xs","sm","md","lg","FormControl","fullWidth","color","InputLabel","FilledInput","type","onChange","e","target","Number","startAdornment","InputAdornment","undefined","endAdornment","CalculationForm","fields","container","map","props","key","useFinancialFreedomCalculation","initialState","initialCapital","monthlyInput","salaryGrowthRate","inflationRate","profitRate","calculateNumberOfYear","useState","setInitialCapital","setMonthlyInput","setSalaryGrowthRate","setInflationRate","setProfitRate","setCalculateNumberOfYear","formatAmount","amount","toFixed","replace","returns","range","reduce","year","previousYear","last","revenue","inflationProduct","Math","pow","profitProduct","salaryProduct","inflatedMonthlyInput","previousYearRevenue","yearlyInput","yearlyProfit","deflatedYearlyProfit","deflatedRevenue","marginTop","gutterBottom","marginBottom","ReturnCard","Card","CardContent","style","fontSize","component","Returns","App","calculation","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","createMuiTheme","palette","primary","indigo","secondary","amber","MaterialProvider","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.17cc5d78.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography, Theme, makeStyles, createStyles } from '@material-ui/core';\n\nconst TopBar = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          財務自由計算機\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default TopBar;\n","import React from 'react';\nimport { Container, makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst SectionContainer = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      {children}\n    </Container>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    padding: theme.spacing(2),\n  },\n}),\n);\n\nexport default SectionContainer;\n","import React from \"react\";\nimport { Grid, FormControl, InputLabel, FilledInput, InputAdornment } from \"@material-ui/core\";\n\ninterface IFieldProps {\n  title: string;\n  value: any;\n  setValue: (value: any) => void;\n  adornment: string;\n  adornmentPosition: string;\n};\n\nconst Field = ({\n  title,\n  value,\n  setValue,\n  adornment,\n  adornmentPosition,\n}: IFieldProps) => (\n    <Grid item={true} xs={12} sm={6} md={6} lg={2}>\n      <FormControl\n        fullWidth={true}\n        variant='filled'\n        color='secondary'\n      >\n        <InputLabel>{title}</InputLabel>\n        <FilledInput\n          type='number'\n          value={value}\n          onChange={(e: any) => setValue(e.target.value === '' ? '' : Number(e.target.value))}\n          startAdornment={adornmentPosition === 'start' ? (\n            <InputAdornment position=\"start\">\n              {adornment}\n            </InputAdornment>\n          ) : undefined}\n          endAdornment={adornmentPosition === 'end' ? (\n            <InputAdornment position=\"end\">\n              {adornment}\n            </InputAdornment>\n          ) : undefined}\n        />\n      </FormControl>\n    </Grid>\n  );\n\nexport default Field;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Field from './components/Field';\n\n\n\nconst CalculationForm = ({ fields }) => {\n  return (\n    <Grid container={true} spacing={1}>\n      {fields.map((props, key) => (\n        <Field key={key} {...props} />\n      ))}\n    </Grid>\n  );\n};\n\nexport default CalculationForm;\n","import { useState } from \"react\";\nimport { range, last } from 'lodash';\n\nconst useFinancialFreedomCalculation = (initialState = {\n  initialCapital: 200000,\n  monthlyInput: 15000,\n  salaryGrowthRate: 2,\n  inflationRate: 3,\n  profitRate: 7,\n  calculateNumberOfYear: 12,\n}) => {\n  const [initialCapital, setInitialCapital] = useState(initialState.initialCapital);\n  const [monthlyInput, setMonthlyInput] = useState(initialState.monthlyInput);\n  const [salaryGrowthRate, setSalaryGrowthRate] = useState(initialState.salaryGrowthRate);\n  const [inflationRate, setInflationRate] = useState(initialState.inflationRate);\n  const [profitRate, setProfitRate] = useState(initialState.profitRate);\n  const [calculateNumberOfYear, setCalculateNumberOfYear] = useState(initialState.calculateNumberOfYear);\n\n  const fields = [\n    {\n      title: '最初資金',\n      value: initialCapital,\n      setValue: setInitialCapital,\n      adornment: '$',\n      adornmentPosition: 'start',\n    },\n    {\n      title: '每月可投入資金',\n      value: monthlyInput,\n      setValue: setMonthlyInput,\n      adornment: '$',\n      adornmentPosition: 'start',\n    },\n    {\n      title: '狗薪增長率 (%)',\n      value: salaryGrowthRate,\n      setValue: setSalaryGrowthRate,\n      adornment: '%',\n      adornmentPosition: 'end',\n    },\n    {\n      title: '量化寬鬆印錢通脹率 (%)',\n      value: inflationRate,\n      setValue: setInflationRate,\n      adornment: '%',\n      adornmentPosition: 'end',\n    },\n    {\n      title: '投資收益率 (%)',\n      value: profitRate,\n      setValue: setProfitRate,\n      adornment: '%',\n      adornmentPosition: 'end',\n    },\n    {\n      title: '計算年期',\n      value: calculateNumberOfYear,\n      setValue: setCalculateNumberOfYear,\n      adornment: '年',\n      adornmentPosition: 'end',\n    },\n  ];\n\n  const formatAmount = (amount: number) => Number(amount).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n\n  const returns = range(calculateNumberOfYear).reduce((returns, year) => {\n    const previousYear = last(returns) || {\n      monthlyInput,\n      revenue: 0,\n    };\n\n    const inflationProduct = Math.pow((1 + inflationRate / 100), year);\n    const profitProduct = 1 + profitRate / 100;\n    const salaryProduct = 1 + salaryGrowthRate / 100;\n\n    const inflatedMonthlyInput = previousYear.monthlyInput * salaryProduct;\n    const previousYearRevenue = previousYear.revenue;\n\n    const yearlyInput = inflatedMonthlyInput * 12;\n\n    const revenue = (() => {\n      if (year === 0) {\n        return (initialCapital + previousYearRevenue + yearlyInput) * profitProduct;\n      }\n      return (previousYearRevenue + yearlyInput) * profitProduct;\n    })();\n\n    const yearlyProfit = revenue - previousYearRevenue;\n    const deflatedYearlyProfit = yearlyProfit / inflationProduct;\n    const deflatedRevenue = revenue / inflationProduct;\n\n    return [\n      ...returns,\n      {\n        ...previousYear,\n        year: year + 1,\n        yearlyInput,\n        yearlyProfit,\n        revenue,\n        deflatedYearlyProfit,\n        deflatedRevenue,\n        monthlyInput: inflatedMonthlyInput,\n      },\n    ]\n  }, [] as any[]).map(item => ({\n    ...item,\n    yearlyInput: formatAmount(item.yearlyInput),\n    yearlyProfit: formatAmount(item.yearlyProfit),\n    revenue: formatAmount(item.revenue),\n    deflatedYearlyProfit: formatAmount(item.deflatedYearlyProfit),\n    deflatedRevenue: formatAmount(item.deflatedRevenue),\n    monthlyInput: formatAmount(item.monthlyInput),\n  }));\n\n  return {\n    fields,\n    returns,\n    setMonthlyInput,\n    setInflationRate,\n    setProfitRate,\n    setCalculateNumberOfYear,\n  };\n\n\n};\n\nexport default useFinancialFreedomCalculation;\n","import React from 'react';\nimport { Grid, Card, CardContent, Typography, makeStyles } from '@material-ui/core';\n\nconst ReturnCard = ({\n  year,\n  yearlyInput,\n  yearlyProfit,\n  revenue,\n  deflatedYearlyProfit,\n  deflatedRevenue,\n  monthlyInput,\n}) => {\n\n  const classes = useStyles();\n\n  return (\n    <Grid item={true} xs={12} sm={6} md={3}>\n      <Card className={classes.root}>\n        <CardContent>\n          <div className={classes.gutterBottom}>\n            <Typography style={{ fontSize: 12 }} color=\"textSecondary\" gutterBottom>\n              第 {year} 年\n          </Typography>\n            <Typography style={{ fontSize: 14 }} variant=\"h6\" component=\"h2\">\n              本利和：${revenue}\n            </Typography>\n            <Typography style={{ fontSize: 12 }} variant=\"body1\" component=\"h2\">\n              (相等於今日嘅：${deflatedRevenue})\n          </Typography>\n          </div>\n\n          <div className={classes.gutterBottom}>\n            <Typography style={{ fontSize: 14 }} color=\"textSecondary\">\n              全年利潤：${yearlyProfit}\n            </Typography>\n            <Typography style={{ fontSize: 12 }} color=\"textSecondary\">\n              (相等於今日嘅：${deflatedYearlyProfit})\n          </Typography>\n          </div>\n\n          <div className={classes.gutterBottom}>\n            <Typography style={{ fontSize: 14 }} variant=\"body2\" component=\"div\">\n              每月投入：${monthlyInput}\n            </Typography>\n            <Typography style={{ fontSize: 12 }} variant=\"body2\" component=\"div\">\n              全年投入：${yearlyInput}\n            </Typography>\n          </div>\n\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(0.5),\n  },\n  gutterBottom: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default ReturnCard;\n","import React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport ReturnCard from './components/ReturnCard';\n\nconst Returns = ({ returns }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root} container={true} spacing={1}>\n      {returns.map((props, key) => (\n        <ReturnCard key={key} {...props} />\n      ))}\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(0.5),\n  },\n}));\n\nexport default Returns;\n","import React from 'react';\nimport TopBar from './components/TopBar';\nimport SectionContainer from './components/SectionContainer';\nimport CalculationForm from './components/CalculationForm';\nimport useFinancialFreedomCalculation from '../hooks/financialFreedomCalculation';\nimport Returns from './components/Returns';\n\nconst App = () => {\n\n  const calculation = useFinancialFreedomCalculation();\n\n  const {\n    fields,\n    returns,\n  } = calculation;\n\n  return (\n    <>\n      <TopBar />\n      <SectionContainer>\n        <CalculationForm fields={fields} />\n        <Returns returns={returns} />\n      </SectionContainer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { indigo, amber } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: indigo,\n    secondary: amber,\n    type: 'dark',\n  },\n});\n\nconst MaterialProvider = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default MaterialProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport MaterialProvider from './components/Material/MaterialProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MaterialProvider>\n      <App />\n    </MaterialProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}